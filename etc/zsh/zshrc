#------------------------------------------------------------------#
# File:     .zshrc   ZSH resource file                             #
# Version:  0.1.16                                                 #
# Author:   Ã˜yvind "Mr.Elendig" Heggstad <mrelendig@har-ikkje.net> #
#------------------------------------------------------------------#

#-----------------------------
# Source some stuff
#-----------------------------
#if [[ -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
#  . /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#fi

#ZSH_AUTOSUGGEST_USE_ASYNC=true
#ZSH_AUTOSUGGEST_STRATEGY=(history completion)
#ZSH_AUTOSUGGEST_IGNORE_WIDGETS+=(expand-or-complete)
#if [[ -f /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
#  . /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
#fi

#BASE16_SHELL="$HOME/.config/base16-shell/base16-default.dark.sh"
#[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

#------------------------------
# History stuff
#------------------------------
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

#------------------------------
# Variables
#------------------------------
export BROWSER="firefox"
export EDITOR="mcedit"
export PATH="${HOME}/.local/bin:${PATH}"

#-----------------------------
# Dircolors
#-----------------------------
LS_COLORS='rs=0:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:tw=30;42:ow=34;42:st=37;44:ex=01;32:';
export LS_COLORS

#------------------------------
# Keybindings
#------------------------------
bindkey -v
bindkey -e
typeset -g -A key
bindkey '^?' backward-delete-char
bindkey '^[[5~' up-line-or-history
bindkey '^[[3~' delete-char
bindkey '^[[6~' down-line-or-history
bindkey '^[[A' up-line-or-search
bindkey '^[[D' backward-char
bindkey '^[[B' down-line-or-search
bindkey '^[[C' forward-char 
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[ShiftTab]="${terminfo[kcbt]}"
key[ControlLeft]="^[[1;5D"
key[ControlRight]="^[[1;5C"

# setup key accordingly
[[ -n "${key[Home]}"          ]] && bindkey -- "${key[Home]}"          beginning-of-line
[[ -n "${key[End]}"           ]] && bindkey -- "${key[End]}"           end-of-line
[[ -n "${key[Insert]}"        ]] && bindkey -- "${key[Insert]}"        overwrite-mode
[[ -n "${key[Backspace]}"     ]] && bindkey -- "${key[Backspace]}"     backward-delete-char
[[ -n "${key[Delete]}"        ]] && bindkey -- "${key[Delete]}"        delete-char
[[ -n "${key[Up]}"            ]] && bindkey -- "${key[Up]}"            up-line-or-history
[[ -n "${key[Down]}"          ]] && bindkey -- "${key[Down]}"          down-line-or-history
[[ -n "${key[Left]}"          ]] && bindkey -- "${key[Left]}"          backward-char
[[ -n "${key[Right]}"         ]] && bindkey -- "${key[Right]}"         forward-char
[[ -n "${key[PageUp]}"        ]] && bindkey -- "${key[PageUp]}"        beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"      ]] && bindkey -- "${key[PageDown]}"      end-of-buffer-or-history
[[ -n "${key[ShiftTab]}"      ]] && bindkey -- "${key[ShiftTab]}"      reverse-menu-complete
[[ -n "${key[ControlLeft]}"   ]] && bindkey -- "${key[ControlLeft]}"   backward-word
[[ -n "${key[ControlRight]}"  ]] && bindkey -- "${key[ControlRight]}"  forward-word

#------------------------------
# Alias stuff
#------------------------------
alias ls="ls --color -F"
alias ll="ls --color -lh"
alias gr="gvim --remote-silent"
alias vr="vim --remote-silent"
alias mc='mc -b'

#------------------------------
# ShellFuncs
#------------------------------
# -- coloured manuals
man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

#------------------------------
# Comp stuff
#------------------------------
zmodload zsh/complist 
autoload -Uz compinit
compinit
zstyle :compinstall filename '${HOME}/.zshrc'

#- buggy
#zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
#zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'
#-/buggy

zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*'   force-list always

zstyle ':completion:*:*:killall:*' menu yes select
zstyle ':completion:*:killall:*'   force-list always

source /usr/share/doc/pkgfile/command-not-found.zsh

#------------------------------
# Window title
#------------------------------
case $TERM in
  termite|*xterm*|rxvt|rxvt-unicode|rxvt-256color|rxvt-unicode-256color)
    precmd () {
      vcs_info
      print -Pn "\e]0;%n%#\a"
    } 
    preexec () { print -Pn "\e]0;%n%# $1\a" }
    ;;
  screen|screen-256color)
    precmd () { 
      vcs_info
      print -Pn "\e]83;title \"$1\"\a" 
      print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~]\a" 
    }
    preexec () { 
      print -Pn "\e]83;title \"$1\"\a" 
      print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~] ($1)\a" 
    }
    ;; 
esac

#------------------------------
# Prompt
#------------------------------
#autoload -U colors zsh/terminfo
#colors

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git hg
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:git*' formats "%{${fg[cyan]}%}[%{${fg[green]}%}%s%{${fg[cyan]}%}][%{${fg[blue]}%}%r/%S%%{${fg[cyan]}%}][%{${fg[blue]}%}%b%{${fg[yellow]}%}%m%u%c%{${fg[cyan]}%}]%{$reset_color%}"

setprompt() {
  setopt prompt_subst

  if [[ -n "$SSH_CLIENT"  ||  -n "$SSH2_CLIENT" ]]; then 
    p_host='%F{yellow}%M%f'
  else
    p_host='%F{green}%M%f'
  fi

  PS1=${(j::Q)${(Z:Cn:):-$'
    %F{cyan}[%f
    %(!.%F{red}%n%f.%F{green}%n%f)
    %F{cyan}@%f
    ${p_host}
    %F{cyan}][%f
    %F{blue}%~%f
    %F{cyan}]%f
    %(!.%F{red}%#%f.%F{green}%#%f)
    " "
  '}}

  PS2=$'%_>'
  RPROMPT=$'${vcs_info_msg_0_}'
}
setprompt

#------------------------------
# Poverlevel10k
#------------------------------

# . /usr/share/powerline/zsh/powerline.zsh
. /usr/local/share/powerlevel10k/powerlevel10k.zsh-theme
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir virtualenv vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs ram battery time)
POWERLEVEL9K_BATTERY_DISCONNECTED="blue"

# Set POWERLEVEL9KGT background color, either 'light' or 'dark' (this should match the GNOME Terminal's theme).
POWERLEVEL9KGT_BACKGROUND='light'
if [[ $POWERLEVEL9KGT_BACKGROUND != 'light' ]] && [[ $POWERLEVEL9KGT_BACKGROUND != 'dark' ]]
then
    POWERLEVEL9KGT_ERROR=true
    echo "POWERLEVEL9KGT error: variable 'POWERLEVEL9KGT_BACKGROUND' should be either 'light' or 'dark'"
fi

# Set POWERLEVEL9KGT color scheme, either 'light', 'dark' or 'bright' (choose by preference).
POWERLEVEL9KGT_COLORS='bright'
if [[ $POWERLEVEL9KGT_COLORS != 'light' ]] && [[ $POWERLEVEL9KGT_COLORS != 'dark' ]] && [[ $POWERLEVEL9KGT_COLORS != 'bright' ]]
then
    POWERLEVEL9KGT_ERROR=true
    echo "POWERLEVEL9KGT error: variable 'POWERLEVEL9KGT_COLORS' should be either 'light', 'dark' or 'bright'"
fi

# Set POWERLEVEL9KGT fonts mode, either 'default', 'awesome-fontconfig', 'awesome-mapped-fontconfig', 'awesome-patched', 'nerdfont-complete' or 'nerdfont-fontconfig'.
# https://github.com/bhilburn/powerlevel9k/wiki/About-Fonts
#POWERLEVEL9KGT_FONTS='awesome-fontconfig'
#if [[ $POWERLEVEL9KGT_FONTS != 'default' ]] && [[ $POWERLEVEL9KGT_FONTS != 'awesome-fontconfig' ]] && [[ $POWERLEVEL9KGT_FONTS != 'awesome-mapped-fontconfig' ]] &&
#    [[ $POWERLEVEL9KGT_FONTS != 'awesome-patched' ]] && [[ $POWERLEVEL9KGT_FONTS != 'nerdfont-complete' ]] && [[ $POWERLEVEL9KGT_FONTS != 'nerdfont-fontconfig' ]]
#then
#    POWERLEVEL9KGT_ERROR=true
#    echo "POWERLEVEL9KGT error: variable 'POWERLEVEL9KGT_FONTS' should be either 'default', 'awesome-fontconfig', 'awesome-mapped-fontconfig', 'awesome-patched', 'nerdfont-complete' or 'nerdfont-fontconfig'"
#else
#    POWERLEVEL9K_MODE=$POWERLEVEL9KGT_FONTS
#fi

if [[ $POWERLEVEL9KGT_ERROR != true ]]
then

    # Set POWERLEVEL9KGT background color
    if [[ $POWERLEVEL9KGT_BACKGROUND == 'light' ]]
    then
        # https://github.com/bhilburn/powerlevel9k/wiki/Stylizing-Your-Prompt#light-color-theme
        POWERLEVEL9K_COLOR_SCHEME='light'
        POWERLEVEL9KGT_TERMINAL_BACKGROUND=231
    elif [[ $POWERLEVEL9KGT_BACKGROUND == 'dark' ]]
    then
        POWERLEVEL9K_COLOR_SCHEME='dark'
        POWERLEVEL9KGT_TERMINAL_BACKGROUND=236
    fi

    # Set POWERLEVEL9KGT foreground colors
    if [[ $POWERLEVEL9KGT_COLORS == 'light' ]]
    then
        POWERLEVEL9KGT_RED=009
        POWERLEVEL9KGT_GREEN=010
        POWERLEVEL9KGT_YELLOW=011
        POWERLEVEL9KGT_BLUE=012
    elif [[ $POWERLEVEL9KGT_COLORS == 'dark' ]]
    then
        POWERLEVEL9KGT_RED=001
        POWERLEVEL9KGT_GREEN=002
        POWERLEVEL9KGT_YELLOW=003
        POWERLEVEL9KGT_BLUE=004
    elif [[ $POWERLEVEL9KGT_COLORS == 'bright' ]]
    then
        POWERLEVEL9KGT_RED=196
        #POWERLEVEL9KGT_GREEN=148
        POWERLEVEL9KGT_GREEN=154
        POWERLEVEL9KGT_YELLOW=220
        POWERLEVEL9KGT_BLUE=075
    fi

    # Set 'context' segment colors
    # https://github.com/bhilburn/powerlevel9k/blob/next/segments/context/README.md
    POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND=$POWERLEVEL9KGT_YELLOW
    POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND=$POWERLEVEL9KGT_YELLOW
    POWERLEVEL9K_CONTEXT_SUDO_FOREGROUND=$POWERLEVEL9KGT_YELLOW
    POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND=$POWERLEVEL9KGT_YELLOW
    POWERLEVEL9K_CONTEXT_REMOTE_SUDO_FOREGROUND=$POWERLEVEL9KGT_YELLOW
    POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_CONTEXT_SUDO_BACKGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_CONTEXT_REMOTE_SUDO_BACKGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND

    # Set 'dir_writable' segment colors
    # https://github.com/bhilburn/powerlevel9k/blob/next/segments/dir_writable/README.md
    POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND=$POWERLEVEL9KGT_YELLOW
    POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_BACKGROUND=$POWERLEVEL9KGT_RED

    # Set 'dir' segment colors
    # https://github.com/bhilburn/powerlevel9k/blob/next/segments/dir/README.md
    POWERLEVEL9K_DIR_DEFAULT_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_DIR_HOME_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_DIR_ETC_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_DIR_DEFAULT_BACKGROUND=$POWERLEVEL9KGT_BLUE
    POWERLEVEL9K_DIR_HOME_BACKGROUND=$POWERLEVEL9KGT_BLUE
    POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND=$POWERLEVEL9KGT_BLUE
    POWERLEVEL9K_DIR_ETC_BACKGROUND=$POWERLEVEL9KGT_BLUE

    # Set 'vcs' segment colors
    # https://github.com/bhilburn/powerlevel9k/blob/next/segments/vcs/README.md
    POWERLEVEL9K_VCS_CLEAN_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_VCS_CLOBBERED_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_VCS_CLEAN_BACKGROUND=$POWERLEVEL9KGT_GREEN
    POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=$POWERLEVEL9KGT_YELLOW
    POWERLEVEL9K_VCS_CLOBBERED_BACKGROUND=$POWERLEVEL9KGT_RED
    POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=$POWERLEVEL9KGT_GREEN

    # Set 'status' segment colors
    # https://github.com/bhilburn/powerlevel9k/blob/next/segments/status/README.md
    POWERLEVEL9K_STATUS_CROSS=true
    POWERLEVEL9K_STATUS_OK_FOREGROUND=$POWERLEVEL9KGT_GREEN
    POWERLEVEL9K_STATUS_ERROR_FOREGROUND=$POWERLEVEL9KGT_RED
    POWERLEVEL9K_STATUS_OK_BACKGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_STATUS_ERROR_BACKGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND

    # Set 'root_indicator' segment colors
    # https://github.com/bhilburn/powerlevel9k/blob/next/segments/root_indicator/README.md
    POWERLEVEL9K_ROOT_INDICATOR_FOREGROUND=$POWERLEVEL9KGT_YELLOW
    POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND

    # Set 'background_jobs' segment colors
    # https://github.com/bhilburn/powerlevel9k/blob/next/segments/background_jobs/README.md
    POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=$POWERLEVEL9KGT_TERMINAL_BACKGROUND
    POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND=$POWERLEVEL9KGT_YELLOW

fi
